{"version":3,"sources":["webpack:///static/js/9.9d93d228d80bb1bf86a0.js","webpack:///./src/views/edit.vue","webpack:///./src/components/breadcrumb.vue?1567*********","webpack:///./src/components/breadcrumb.vue?25d1********","webpack:///./src/components/breadcrumb.vue?4181*********","webpack:///./src/components/breadcrumb.vue?c83d*********","webpack:///breadcrumb.vue?f555********","webpack:///./~/.6.4.0@qs/lib/formats.js?a15c","webpack:///./~/.6.4.0@qs/lib/utils.js?e707","webpack:///./~/.3.0.4@wangeditor/release/wangEditor.js?a459","webpack:///./~/.6.4.0@qs/lib/index.js?9e95","webpack:///./~/.6.4.0@qs/lib/parse.js?48e1","webpack:///./~/.6.4.0@qs/lib/stringify.js?c4ab","webpack:///./src/views/edit.vue?2b47","webpack:///./src/views/edit.vue?f11c","webpack:///./src/views/edit.vue?5316","webpack:///edit.vue"],"names":["webpackJsonp","105","module","exports","__webpack_require__","injectStyle","ssrContext","Component","114","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","115","116","render","_vm","this","_h","$createElement","_c","_self","staticClass","on","click","$event","navTo","_v","name","_s","staticRenderFns","117","content","locals","118","__webpack_exports__","Object","defineProperty","value","props","type","String","required","methods","url","console","log","$router","154","replace","prototype","percentTwenties","default","formatters","RFC1738","call","RFC3986","155","has","hasOwnProperty","hexTable","array","toString","toUpperCase","arrayToObject","source","options","obj","plainObjects","create","length","merge","target","Array","isArray","allowPrototypes","concat","mergeTarget","forEach","item","keys","reduce","acc","key","decode","str","decodeURIComponent","e","encode","string","out","c","charCodeAt","charAt","compact","references","refs","lookup","indexOf","compacted","isRegExp","isBuffer","constructor","156","global","factory","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","selectorResult","nodeType","trim","$","objForEach","fn","arrForEach","fakeArr","getRandom","prefix","Math","random","slice","replaceHtmlSymbol","Bold","editor","$elem","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","elemHtml","$li","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","BackColor","ForeColor$1","Quote","Code","Emoticon","Table","Video","Image","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","getAsFile","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","elem","get","index","first","last","types","addEventListener","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","config","zIndex","debug","showLinkImg","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","token","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","langArgs","reg","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","title","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","getSelectionContainerElem","createRangeByElem","_createPanel","getSelectionText","link","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","$selectionELem","$textElem","$selectionElem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","faceHtml","handHtml","_insert","emoji","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","saveRange","pHandle","$p","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_startOffset","startOffset","preventDefault","keyCode","txtHtml","ex","pasteFiles","img","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","execCommand","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","Date","now","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","alert","onload","onerror","onabort","src","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","hooks","resultFiles","errInfo","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","encodeURIComponent","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","setRequestHeader","send","reader","readAsDataURL","_initConfig","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchange","currentHtml","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","157","stringify","formats","158","utils","defaults","allowDots","arrayLimit","decoder","delimiter","depth","parameterLimit","strictNullHandling","parseValues","parts","Infinity","undefined","part","pos","parseObject","chain","root","shift","cleanRoot","isNaN","parseArrays","parseKeys","givenKey","brackets","segment","exec","opts","tempObj","newObj","159","arrayPrefixGenerators","indices","repeat","toISO","toISOString","encoder","encodeValuesOnly","serializeDate","date","skipNulls","object","generateArrayPrefix","sort","formatter","values","objKeys","format","arrayFormat","170","190","attrs","for","ref","getFile","directives","rawName","expression","domProps","input","composing","thumb","_l","inputs","$set","selected","$$selectedVal","o","_value","multiple","option","num","_e","checked","isShow","_i","__c","$$a","$$el","$$c","$$i","saveBlog","208","229","__WEBPACK_IMPORTED_MODULE_0_components_breadcrumb__","__WEBPACK_IMPORTED_MODULE_0_components_breadcrumb___default","n","__WEBPACK_IMPORTED_MODULE_1_vue__","__WEBPACK_IMPORTED_MODULE_2_common_js_dom__","__WEBPACK_IMPORTED_MODULE_3_axios__","__WEBPACK_IMPORTED_MODULE_4_wangeditor__","__WEBPACK_IMPORTED_MODULE_4_wangeditor___default","qs","selects","分类","所属产品","editorContent","singleUrl","watch","created","addEl","mounted","hasEditor","createEditor","$http","then","res","info","product","productCode","set","auth","categor","logo","body","components","breadcrumb","a","$route","query","options01","options02","insert","formData","imgUrl","headers","Content-Type","post","catch","err","stateVal","article","article2","put","go"],"mappings":"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","file":"static/js/9.9d93d228d80bb1bf86a0.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 105:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(208)\n}\nvar Component = __webpack_require__(37)(\n  /* script */\n  __webpack_require__(229),\n  /* template */\n  __webpack_require__(190),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(96)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".breadcrumb{padding:10px;margin:4px 0 20px;border-radius:6px;background:#f5f5f5}.breadcrumb .divider{padding:0 8px;color:#ccc}\", \"\", {\"version\":3,\"sources\":[\"/Users/sangdongmei/Desktop/webFront/working/website/backend-view/src/components/breadcrumb.vue\"],\"names\":[],\"mappings\":\"AACA,YACE,aAAc,AACd,kBAAqB,AACrB,kBAAmB,AACnB,kBAAoB,CACrB,AACD,qBACE,cAAe,AACf,UAAY,CACb\",\"file\":\"breadcrumb.vue\",\"sourcesContent\":[\"\\n.breadcrumb {\\n  padding: 10px;\\n  margin: 4px 0 20px 0;\\n  border-radius: 6px;\\n  background: #f5f5f5;\\n}\\n.breadcrumb .divider {\\n  padding: 0 8px;\\n  color: #ccc;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(117)\n}\nvar Component = __webpack_require__(37)(\n  /* script */\n  __webpack_require__(118),\n  /* template */\n  __webpack_require__(116),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 116:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"breadcrumb\"\n  }, [_c('a', {\n    on: {\n      \"click\": function($event) {\n        _vm.navTo('admin')\n      }\n    }\n  }, [_vm._v(\"home\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"divider\"\n  }, [_vm._v(\"/\")]), _vm._v(\" \"), _c('a', {\n    on: {\n      \"click\": function($event) {\n        _vm.navTo(_vm.name)\n      }\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.name) + \"\\n    \")])])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(114);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(97)(\"becf3896\", content, true);\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    props: {\n        name: {\n            type: String,\n            required: true\n        }\n    },\n    methods: {\n        navTo: function navTo(url) {\n            console.log(url);\n            this.$router.push({\n                name: url\n            });\n        }\n    }\n\n});\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n/***/ }),\n\n/***/ 155:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (selector.nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector)) {\n        // DOM List\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn, false);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                }, false);\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn, false);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 5000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    }\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - backcolor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-pencil2\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-pencil2\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-pencil2\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-pencil2\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-pencil2\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-pencil2\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-pencil2\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-pencil2\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - forecolor\n*/\n// 构造函数\nfunction ForeColor$1(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor$1.prototype = {\n    constructor: ForeColor$1,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 拼接表情字符串\n        var faceHtml = '';\n        var faceStr = '😀 😃 😄 😁 😆 😅 😂  😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐';\n        faceStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var handHtml = '';\n        var handStr = '🙌 👏 👋 👍 👎 👊 ✊ ️👌 ✋ 👐 💪 🙏 ️👆 👇 👈 👉 🖕 🖐 🤘 🖖';\n        handStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                handHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '表情',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                // 标题\n                title: '手势',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + handHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // second tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emoji) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<span>' + emoji + '</span>');\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-image\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = BackColor;\n\nMenuConstructors.backColor = ForeColor$1;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n\n    // 过滤样式\n    pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.html();\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.text();\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                // IE 下放弃下面的判断\n                return;\n            }\n\n            // 阻止默认行为，使用 execCommand 的粘贴命令\n            e.preventDefault();\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 表格中忽略，可能会出现异常问题\n            if (nodeName === 'TD' || nodeName === 'TH') {\n                return;\n            }\n\n            if (nodeName === 'DIV' || $textElem.html() === '<p><br></p>') {\n                // 是 div，可粘贴过滤样式的文字和链接\n                if (!pasteHtml) {\n                    return;\n                }\n                try {\n                    // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                    // 因此执行 insertHTML 会报错\n                    editor.cmd.do('insertHTML', pasteHtml);\n                } catch (ex) {\n                    // 此时使用 pasteText 来兼容一下\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                }\n            } else {\n                // 不是 div，证明在已有内容的元素中粘贴，只粘贴纯文本\n                if (!pasteText) {\n                    return;\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            e.preventDefault();\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var selectedClass = 'w-e-selected';\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            // 去掉所有图片的 selected 样式\n            $textElem.find('img').removeClass(selectedClass);\n\n            // 为点击的图片增加样式，并记录当前图片\n            $img.addClass(selectedClass);\n            editor._selectedImg = $img;\n\n            // 修改选取\n            editor.selection.createRangeByElem($img);\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 取消掉 selected 样式，并删除记录\n            $textElem.find('img').removeClass(selectedClass);\n            editor._selectedImg = null;\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        // 保证传入的参数是 html 代码\n        var test = /^<.+>$/.test(html);\n        if (!test && !UA.isWebkit()) {\n            // webkit 可以插入非 html 格式的文字\n            throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式');\n        }\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n\n        var img = document.createElement('img');\n        img.onload = function () {\n            img = null;\n            editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                val = encodeURIComponent(val);\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgServer.indexOf('?') > 0) {\n                    uploadImgServer += '&';\n                } else {\n                    uploadImgServer += '?';\n                }\n                uploadImgServer = uploadImgServer + key + '=' + val;\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                hooks.before(xhr, editor, resultFiles);\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    return;\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, 200);\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'icomoon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'icomoon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}.w-e-text img.w-e-selected {  border: 2px solid #1e88e5;}.w-e-text img.w-e-selected:hover {  box-shadow: none;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n/***/ }),\n\n/***/ 157:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar stringify = __webpack_require__(159);\nvar parse = __webpack_require__(158);\nvar formats = __webpack_require__(154);\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(155);\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(155);\nvar formats = __webpack_require__(154);\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n\n/***/ }),\n\n/***/ 170:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(96)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".edit label{display:block;width:100%;margin:10px 0}.edit label.inline{display:inline-block}.edit label.inline input{display:inline-block;width:60px}.edit label input,.edit label textarea{width:100%;margin:10px 0}.edit label input{height:30px}.edit label input[type=file]{width:70px;border:none}.edit label input[name=fileVal]{display:inline-block;width:70%;margin-right:20px}.edit label select{width:100%;margin:10px 0;height:30px;font-size:18px}.edit .isShow{display:inline-block;width:40%}.edit .button{display:inline-block;outline:none;cursor:pointer;text-align:center;text-decoration:none;color:#fff;background:green;padding:10px 20px;text-shadow:0 1px 1px rgba(0,0,0,.3);border-radius:6px;box-shadow:0 1px 2px rgba(0,0,0,.2)}.edit .button:hover{cursor:pointer;background:#51a351}.edit .button:active{position:relative;top:1px}.edit #editor h1{font-size:36px;font-weight:500}.edit #editor h2{font-size:30px;font-weight:500}.edit #editor h3{font-size:24px;font-weight:500}.edit #editor h4{font-size:18px;font-weight:500}.edit #editor h5{font-size:14px;font-weight:500}.edit #editor .w-e-text ol,.edit #editor .w-e-text ol li{list-style:decimal}.edit #editor .w-e-text ul,.edit #editor .w-e-text ul li{list-style:disc}\", \"\", {\"version\":3,\"sources\":[\"/Users/sangdongmei/Desktop/webFront/working/website/backend-view/src/views/edit.vue\"],\"names\":[],\"mappings\":\"AACA,YACE,cAAe,AACf,WAAY,AACZ,aAAe,CAChB,AACD,mBACE,oBAAsB,CACvB,AACD,yBACE,qBAAsB,AACtB,UAAY,CACb,AAKD,uCAHE,WAAY,AACZ,aAAe,CAMhB,AAJD,kBAEE,WAAa,CAEd,AACD,6BACE,WAAY,AACZ,WAAa,CACd,AACD,gCACE,qBAAsB,AACtB,UAAW,AACX,iBAAmB,CACpB,AACD,mBACE,WAAY,AACZ,cAAe,AACf,YAAa,AACb,cAAgB,CACjB,AACD,cACE,qBAAsB,AACtB,SAAW,CACZ,AACD,cACE,qBAAsB,AACtB,aAAc,AACd,eAAgB,AAChB,kBAAmB,AACnB,qBAAsB,AACtB,WAAY,AACZ,iBAAoB,AACpB,kBAAmB,AACnB,qCAAuC,AACvC,kBAAmB,AACnB,mCAAsC,CACvC,AACD,oBACE,eAAgB,AAChB,kBAAoB,CACrB,AACD,qBACE,kBAAmB,AACnB,OAAS,CACV,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AAID,yDACE,kBAAoB,CACrB,AAID,yDACE,eAAiB,CAClB\",\"file\":\"edit.vue\",\"sourcesContent\":[\"\\n.edit label {\\n  display: block;\\n  width: 100%;\\n  margin: 10px 0;\\n}\\n.edit label.inline {\\n  display: inline-block;\\n}\\n.edit label.inline input {\\n  display: inline-block;\\n  width: 60px;\\n}\\n.edit label textarea {\\n  width: 100%;\\n  margin: 10px 0;\\n}\\n.edit label input {\\n  width: 100%;\\n  height: 30px;\\n  margin: 10px 0;\\n}\\n.edit label input[type='file'] {\\n  width: 70px;\\n  border: none;\\n}\\n.edit label input[name='fileVal'] {\\n  display: inline-block;\\n  width: 70%;\\n  margin-right: 20px;\\n}\\n.edit label select {\\n  width: 100%;\\n  margin: 10px 0;\\n  height: 30px;\\n  font-size: 18px;\\n}\\n.edit .isShow {\\n  display: inline-block;\\n  width: 40%;\\n}\\n.edit .button {\\n  display: inline-block;\\n  outline: none;\\n  cursor: pointer;\\n  text-align: center;\\n  text-decoration: none;\\n  color: #fff;\\n  background: #008000;\\n  padding: 10px 20px;\\n  text-shadow: 0 1px 1px rgba(0,0,0,0.3);\\n  border-radius: 6px;\\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\\n}\\n.edit .button:hover {\\n  cursor: pointer;\\n  background: #51a351;\\n}\\n.edit .button:active {\\n  position: relative;\\n  top: 1px;\\n}\\n.edit #editor h1 {\\n  font-size: 36px;\\n  font-weight: 500;\\n}\\n.edit #editor h2 {\\n  font-size: 30px;\\n  font-weight: 500;\\n}\\n.edit #editor h3 {\\n  font-size: 24px;\\n  font-weight: 500;\\n}\\n.edit #editor h4 {\\n  font-size: 18px;\\n  font-weight: 500;\\n}\\n.edit #editor h5 {\\n  font-size: 14px;\\n  font-weight: 500;\\n}\\n.edit #editor .w-e-text ol {\\n  list-style: decimal;\\n}\\n.edit #editor .w-e-text ol li {\\n  list-style: decimal;\\n}\\n.edit #editor .w-e-text ul {\\n  list-style: disc;\\n}\\n.edit #editor .w-e-text ul li {\\n  list-style: disc;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return (_vm.values.length > 0) ? _c('div', {\n    staticClass: \"edit\"\n  }, [_c('breadcrumb', {\n    staticClass: \"bread\",\n    attrs: {\n      \"name\": _vm.name\n    }\n  }), _vm._v(\" \"), _c('label', {\n    attrs: {\n      \"for\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"请选择缩略图:\")]), _vm._v(\" \"), _c('input', {\n    ref: \"file\",\n    attrs: {\n      \"type\": \"file\",\n      \"name\": \"file\",\n      \"value\": \"12\"\n    },\n    on: {\n      \"change\": function($event) {\n        _vm.getFile($event)\n      }\n    }\n  }), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.thumb),\n      expression: \"thumb\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"fileVal\"\n    },\n    domProps: {\n      \"value\": (_vm.thumb)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.thumb = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    on: {\n      \"click\": _vm.uploadImg\n    }\n  }, [_vm._v(\"提交\")])]), _vm._v(\" \"), _vm._l((_vm.inputs), function(name, index) {\n    return _c('label', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.inputs.length > 0),\n        expression: \"inputs.length>0\"\n      }],\n      key: index,\n      attrs: {\n        \"for\": \"\"\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(name) + \"\\n        \"), _c('input', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.values[index]),\n        expression: \"values[index]\"\n      }],\n      attrs: {\n        \"type\": \"text\",\n        \"name\": \"head\"\n      },\n      domProps: {\n        \"value\": name,\n        \"value\": (_vm.values[index])\n      },\n      on: {\n        \"input\": function($event) {\n          if ($event.target.composing) { return; }\n          _vm.$set(_vm.values, index, $event.target.value)\n        }\n      }\n    })])\n  }), _vm._v(\" \"), _c('div', {\n    ref: _vm.editor,\n    attrs: {\n      \"id\": \"editor\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.selects), function(value, key, index) {\n    return (value) ? _c('label', {\n      key: index,\n      attrs: {\n        \"for\": \"\"\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(key) + \"\\n        \"), _c('select', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.selected[index]),\n        expression: \"selected[index]\"\n      }],\n      attrs: {\n        \"name\": (\"select\" + index)\n      },\n      on: {\n        \"change\": function($event) {\n          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n            return o.selected\n          }).map(function(o) {\n            var val = \"_value\" in o ? o._value : o.value;\n            return val\n          });\n          _vm.$set(_vm.selected, index, $event.target.multiple ? $$selectedVal : $$selectedVal[0])\n        }\n      }\n    }, _vm._l((value), function(option, num) {\n      return _c('option', {\n        key: num,\n        attrs: {\n          \"value\": \"\"\n        },\n        domProps: {\n          \"value\": num\n        }\n      }, [_vm._v(\"\\n                \" + _vm._s(option) + \"\\n            \")])\n    }))]) : _vm._e()\n  }), _vm._v(\" \"), _c('div', [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.isShow),\n      expression: \"isShow\"\n    }],\n    attrs: {\n      \"type\": \"checkbox\",\n      \"name\": \"show\",\n      \"id\": \"show\"\n    },\n    domProps: {\n      \"checked\": Array.isArray(_vm.isShow) ? _vm._i(_vm.isShow, null) > -1 : (_vm.isShow)\n    },\n    on: {\n      \"__c\": function($event) {\n        var $$a = _vm.isShow,\n          $$el = $event.target,\n          $$c = $$el.checked ? (true) : (false);\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$el.checked) {\n            $$i < 0 && (_vm.isShow = $$a.concat($$v))\n          } else {\n            $$i > -1 && (_vm.isShow = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n          }\n        } else {\n          _vm.isShow = $$c\n        }\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"isShow\",\n    attrs: {\n      \"for\": \"show\"\n    }\n  }, [_vm._v(\"是否可见\")])]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    on: {\n      \"click\": _vm.saveBlog\n    }\n  }, [_vm._v(\"保存\")])], 2) : _vm._e()\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(170);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(97)(\"470363b1\", content, true);\n\n/***/ }),\n\n/***/ 229:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_breadcrumb__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_breadcrumb___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_components_breadcrumb__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_js_dom__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_wangeditor__ = __webpack_require__(156);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_wangeditor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_wangeditor__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar qs = __webpack_require__(157);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    // values---input value    selected---selected value\n    // thumb 图片路径 editor 编辑器对象 editorContent 编辑内容 singleUrl 请求单文api\n    // inputs 输入框 selects \n    data: function data() {\n        return {\n            name: 'Edit',\n            type: '',\n            inputs: [],\n            selects: {\n                '分类': [],\n                '所属产品': []\n            },\n            values: [],\n            selected: [0, 0],\n            isShow: false,\n            file: '',\n            thumb: '',\n            index: 0,\n            editor: '',\n            editorContent: '',\n            singleUrl: '',\n            id: 0\n        };\n    },\n\n    watch: {\n        values: function values(val) {\n            console.log(val);\n        },\n        selected: function selected(val) {\n            console.log(val);\n        },\n        checked: function checked(val) {\n            console.log(val);\n        },\n        editorContent: function editorContent(val) {\n            console.log(val);\n        }\n    },\n    created: function created() {\n        this.addEl();\n        //console.log(this.hasEditor)\n    },\n    mounted: function mounted() {\n        var _this2 = this;\n\n        console.log(this.hasEditor);\n        this.createEditor();\n        // 编辑文件 分类没有请选择这个 所有value－1\n        if (this.singleUrl) {\n            this.$http.get(this.singleUrl, {\n                withCredentials: true\n            }).then(function (res) {\n                var info = res.data.data;\n                var product = info.productCode ? info.productCode : 0;\n                console.log(info);\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(_this2.values, 0, info.title);\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(_this2.values, 1, info.auth);\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(_this2.selected, 0, info.categor - 1);\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(_this2.selected, 1, product);\n                _this2.thumb = info.thumb || info.logo;\n                _this2.isShow = info.status === 1 ? true : false;\n                _this2.id = info.id;\n                _this2.editor.txt.html(info.body);\n            });\n        }\n    },\n\n    components: {\n        breadcrumb: __WEBPACK_IMPORTED_MODULE_0_components_breadcrumb___default.a\n    },\n    methods: {\n        addEl: function addEl() {\n            var data = this.$route.query;\n\n            if (data.url) {\n                this.singleUrl = data.url;\n            }\n            console.log(data);\n            this.type = data.type;\n\n            for (var i = 0; i < data.inputs.length; i++) {\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(this.values, i, '');\n                __WEBPACK_IMPORTED_MODULE_1_vue__[\"a\" /* default */].set(this.inputs, i, data.inputs[i]);\n            }\n            for (var key in this.selects) {\n                if (key === '分类') {\n                    this.selects[key] = data.options01;\n                } else {\n                    this.selects[key] = data.options02;\n                }\n            }\n        },\n        getFile: function getFile(event) {\n            this.file = event.target.files[0];\n        },\n\n        // 看下optionchange还有用没\n        // optionChange(event) {\n        //     let value = event.target.value\n        //     let name = event.target.name\n        //     console.log(event)\n        //     if (name === 'select0') {\n        //         Vue.set(this.selected, 0, value)\n        //     } else {\n        //         Vue.set(this.selected, 1, value)\n        //     }\n        // },\n        createEditor: function createEditor() {\n            this.editor = new __WEBPACK_IMPORTED_MODULE_4_wangeditor___default.a('#editor');\n            var _this = this;\n            this.editor.customConfig.menus = ['head', // 标题\n            'bold', // 粗体\n            'italic', // 斜体\n            'underline', // 下划线\n            'strikeThrough', // 删除线\n            'foreColor', // 文字颜色\n            'backColor', // 背景颜色\n            'link', // 插入链接\n            'list', // 列表\n            'justify', // 对齐方式\n            'quote', // 引用\n            'emoticon', // 表情\n            'image', // 插入图片\n            'table', // 表格\n            'code', // 插入代码\n            'undo', // 撤销\n            'redo'];\n            this.editor.customConfig.customUploadImg = function (files, insert) {\n                // files 是 input 中选中的文件列表\n                // insert 是获取图片 url 后，插入到编辑器的方法\n                var formData = new FormData();\n                formData.append('file', files[0]);\n                var imgUrl = void 0;\n                var config = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                };\n                _this.$http.post(__WEBPACK_IMPORTED_MODULE_2_common_js_dom__[\"a\" /* apiUrl */] + '/admin/file_manager/attachments/uploadImage', formData, {\n                    withCredentials: true\n                }, config).then(function (res) {\n                    imgUrl = res.data.data[0];\n                    insert(imgUrl);\n                }).catch(function (err) {\n                    console.log(err);\n                });\n            };\n            this.editor.customConfig.onchange = function (html) {\n                _this.editorContent = html;\n            };\n            this.editor.create();\n        },\n        saveBlog: function saveBlog() {\n            var stateVal = this.isShow ? 1 : 0;\n            var _this = this;\n\n            var article = {\n                'title': this.values[0],\n                'auth': this.values[1],\n                'type': 'node',\n                'categor': this.selected[0] + 1,\n                'productCode': this.selected[1],\n                'thumb': this.thumb,\n                'logo': this.thumb,\n                'status': stateVal,\n                'body': this.editor.txt.html()\n            };\n\n            var config = {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            if (this.singleUrl && this.id) {\n                var article2 = {\n                    'id': this.id,\n                    'title': this.values[0],\n                    'auth': this.values[1],\n                    'categor': this.selected[0] + 1,\n                    'productCode': this.selected[1],\n                    'thumb': this.thumb,\n                    'logo': this.thumb,\n                    'status': stateVal,\n                    'body': this.editor.txt.html()\n                };\n                this.$http.put(__WEBPACK_IMPORTED_MODULE_2_common_js_dom__[\"a\" /* apiUrl */] + '/admin/patsnap/' + _this.type, qs.stringify(article2), {\n                    withCredentials: true\n                }).then(function (res) {\n                    if (res.data.status === 1) {\n                        alert('修改完成');\n                        _this.$router.go(-1);\n                    } else {\n                        alert('修改失败');\n                    }\n                }).catch(function (err) {\n                    alert('提交失败，请重试');\n                    console.log(err);\n                });\n            } else {\n                this.$http.post(__WEBPACK_IMPORTED_MODULE_2_common_js_dom__[\"a\" /* apiUrl */] + '/admin/patsnap/' + _this.type, qs.stringify(article), {\n                    withCredentials: true\n                }).then(function (res) {\n                    if (res.data.status === 1) {\n                        alert('修改完成');\n                        _this.$router.go(-1);\n                    } else {\n                        alert('修改失败');\n                    }\n                }).catch(function (err) {\n                    alert('提交失败，请重试');\n                });\n            }\n        },\n        uploadImg: function uploadImg() {\n            var formData = new FormData();\n            formData.append('file', this.file);\n\n            var _this = this;\n\n            var config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            };\n            this.$http.post(__WEBPACK_IMPORTED_MODULE_2_common_js_dom__[\"a\" /* apiUrl */] + '/admin/file_manager/attachments/uploadImage', formData, {\n                withCredentials: true\n            }, config).then(function (res) {\n\n                if (res.data.errno == '0') {\n                    alert('图片提交成功');\n                    _this.thumb = res.data.data[0];\n                } else {\n                    alert('图片提交失败');\n                }\n            }).catch(function (err) {\n                alert('图片提交失败');\n            });\n        }\n    }\n\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/9.9d93d228d80bb1bf86a0.js","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/.2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4a86a32e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/selector?type=styles&index=0!./edit.vue\")\n}\nvar Component = require(\"!../../node_modules/.12.2.2@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.12.2.2@vue-loader/lib/selector?type=script&index=0!./edit.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.12.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4a86a32e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/.12.2.2@vue-loader/lib/selector?type=template&index=0!./edit.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/edit.vue\n// module id = 105\n// module chunks = 9","exports = module.exports = require(\"../../node_modules/.0.28.4@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".breadcrumb{padding:10px;margin:4px 0 20px;border-radius:6px;background:#f5f5f5}.breadcrumb .divider{padding:0 8px;color:#ccc}\", \"\", {\"version\":3,\"sources\":[\"/Users/sangdongmei/Desktop/webFront/working/website/backend-view/src/components/breadcrumb.vue\"],\"names\":[],\"mappings\":\"AACA,YACE,aAAc,AACd,kBAAqB,AACrB,kBAAmB,AACnB,kBAAoB,CACrB,AACD,qBACE,cAAe,AACf,UAAY,CACb\",\"file\":\"breadcrumb.vue\",\"sourcesContent\":[\"\\n.breadcrumb {\\n  padding: 10px;\\n  margin: 4px 0 20px 0;\\n  border-radius: 6px;\\n  background: #f5f5f5;\\n}\\n.breadcrumb .divider {\\n  padding: 0 8px;\\n  color: #ccc;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.28.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5205912e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.2.5.1@stylus-loader?{\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./src/components/breadcrumb.vue\n// module id = 114\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/.2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5205912e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/selector?type=styles&index=0!./breadcrumb.vue\")\n}\nvar Component = require(\"!../../node_modules/.12.2.2@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.12.2.2@vue-loader/lib/selector?type=script&index=0!./breadcrumb.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.12.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5205912e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/.12.2.2@vue-loader/lib/selector?type=template&index=0!./breadcrumb.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/breadcrumb.vue\n// module id = 115\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"breadcrumb\"\n  }, [_c('a', {\n    on: {\n      \"click\": function($event) {\n        _vm.navTo('admin')\n      }\n    }\n  }, [_vm._v(\"home\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"divider\"\n  }, [_vm._v(\"/\")]), _vm._v(\" \"), _c('a', {\n    on: {\n      \"click\": function($event) {\n        _vm.navTo(_vm.name)\n      }\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.name) + \"\\n    \")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.12.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-5205912e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/.12.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/breadcrumb.vue\n// module id = 116\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/.0.28.4@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5205912e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/.2.5.1@stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./breadcrumb.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/.3.0.1@vue-style-loader/lib/addStylesClient.js\")(\"becf3896\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.3.0.1@vue-style-loader!./~/.0.28.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5205912e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.2.5.1@stylus-loader?{\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./src/components/breadcrumb.vue\n// module id = 117\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10","<template>\n    <div class=\"breadcrumb\">\n        <a @click=\"navTo('admin')\">home</a>\n        <span class=\"divider\">/</span>\n        <a @click=\"navTo(name)\">\n            {{ name }}\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        name: {\n            type: String,\n            required: true\n        }\n    },\n    methods: {\n        navTo(url) {\n            console.log(url)\n            this.$router.push({\n                name: url\n            })\n        }\n    }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n.breadcrumb\n    padding : 10px\n    margin : 4px 0 20px 0\n    border-radius : 6px\n    background : #f5f5f5\n    .divider\n        padding : 0 8px\n        color : #ccc\n</style>\n\n\n\n// WEBPACK FOOTER //\n// breadcrumb.vue?556d33f4","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.4.0@qs/lib/formats.js\n// module id = 154\n// module chunks = 8 9","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.4.0@qs/lib/utils.js\n// module id = 155\n// module chunks = 8 9","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (selector.nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector)) {\n        // DOM List\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn, false);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                }, false);\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn, false);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 5000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    }\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - backcolor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-pencil2\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-pencil2\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-pencil2\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-pencil2\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-pencil2\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-pencil2\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-pencil2\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-pencil2\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - forecolor\n*/\n// 构造函数\nfunction ForeColor$1(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor$1.prototype = {\n    constructor: ForeColor$1,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 拼接表情字符串\n        var faceHtml = '';\n        var faceStr = '😀 😃 😄 😁 😆 😅 😂  😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐';\n        faceStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var handHtml = '';\n        var handStr = '🙌 👏 👋 👍 👎 👊 ✊ ️👌 ✋ 👐 💪 🙏 ️👆 👇 👈 👉 🖕 🖐 🤘 🖖';\n        handStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                handHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '表情',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                // 标题\n                title: '手势',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + handHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // second tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emoji) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<span>' + emoji + '</span>');\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-image\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = BackColor;\n\nMenuConstructors.backColor = ForeColor$1;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n\n    // 过滤样式\n    pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.html();\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.text();\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                // IE 下放弃下面的判断\n                return;\n            }\n\n            // 阻止默认行为，使用 execCommand 的粘贴命令\n            e.preventDefault();\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 表格中忽略，可能会出现异常问题\n            if (nodeName === 'TD' || nodeName === 'TH') {\n                return;\n            }\n\n            if (nodeName === 'DIV' || $textElem.html() === '<p><br></p>') {\n                // 是 div，可粘贴过滤样式的文字和链接\n                if (!pasteHtml) {\n                    return;\n                }\n                try {\n                    // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                    // 因此执行 insertHTML 会报错\n                    editor.cmd.do('insertHTML', pasteHtml);\n                } catch (ex) {\n                    // 此时使用 pasteText 来兼容一下\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                }\n            } else {\n                // 不是 div，证明在已有内容的元素中粘贴，只粘贴纯文本\n                if (!pasteText) {\n                    return;\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            e.preventDefault();\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var selectedClass = 'w-e-selected';\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            // 去掉所有图片的 selected 样式\n            $textElem.find('img').removeClass(selectedClass);\n\n            // 为点击的图片增加样式，并记录当前图片\n            $img.addClass(selectedClass);\n            editor._selectedImg = $img;\n\n            // 修改选取\n            editor.selection.createRangeByElem($img);\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 取消掉 selected 样式，并删除记录\n            $textElem.find('img').removeClass(selectedClass);\n            editor._selectedImg = null;\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        // 保证传入的参数是 html 代码\n        var test = /^<.+>$/.test(html);\n        if (!test && !UA.isWebkit()) {\n            // webkit 可以插入非 html 格式的文字\n            throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式');\n        }\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n\n        var img = document.createElement('img');\n        img.onload = function () {\n            img = null;\n            editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                val = encodeURIComponent(val);\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgServer.indexOf('?') > 0) {\n                    uploadImgServer += '&';\n                } else {\n                    uploadImgServer += '?';\n                }\n                uploadImgServer = uploadImgServer + key + '=' + val;\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                hooks.before(xhr, editor, resultFiles);\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    return;\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, 200);\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'icomoon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,d09GRgABAAAAABXAAAsAAAAAFXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIPAmNtYXAAAAFoAAAA9AAAAPRAxxN6Z2FzcAAAAlwAAAAIAAAACAAAABBnbHlmAAACZAAAEHwAABB8kRGt5WhlYWQAABLgAAAANgAAADYN4rlyaGhlYQAAExgAAAAkAAAAJAfEA99obXR4AAATPAAAAHwAAAB8cAcDvGxvY2EAABO4AAAAQAAAAEAx8jYEbWF4cAAAE/gAAAAgAAAAIAAqALZuYW1lAAAUGAAAAYYAAAGGmUoJ+3Bvc3QAABWgAAAAIAAAACAAAwAAAAMD3AGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA8fwDwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEANgAAAAyACAABAASAAEAIOkG6Q3pEulH6Wbpd+m56bvpxunL6d/qDepl6mjqcep58A3wFPEg8dzx/P/9//8AAAAAACDpBukN6RLpR+ll6Xfpuem76cbpy+nf6g3qYupo6nHqd/AN8BTxIPHc8fz//f//AAH/4xb+FvgW9BbAFqMWkxZSFlEWRxZDFjAWAxWvFa0VpRWgEA0QBw78DkEOIgADAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAPAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAIAAP/ABAADwAAEABMAAAE3AScBAy4BJxM3ASMBAyUBNQEHAYCAAcBA/kCfFzsyY4ABgMD+gMACgAGA/oBOAUBAAcBA/kD+nTI7FwERTgGA/oD9gMABgMD+gIAABAAAAAAEAAOAABAAIQAtADQAAAE4ATEROAExITgBMRE4ATEhNSEiBhURFBYzITI2NRE0JiMHFAYjIiY1NDYzMhYTITUTATM3A8D8gAOA/IAaJiYaA4AaJiYagDgoKDg4KCg4QP0A4AEAQOADQP0AAwBAJhr9ABomJhoDABom4Cg4OCgoODj9uIABgP7AwAAAAgAAAEAEAANAACgALAAAAS4DIyIOAgcOAxUUHgIXHgMzMj4CNz4DNTQuAicBEQ0BA9U2cXZ5Pz95dnE2Cw8LBgYLDws2cXZ5Pz95dnE2Cw8LBgYLDwv9qwFA/sADIAgMCAQECAwIKVRZWy8vW1lUKQgMCAQECAwIKVRZWy8vW1lUKf3gAYDAwAAAAAACAMD/wANAA8AAEwAfAAABIg4CFRQeAjEwPgI1NC4CAyImNTQ2MzIWFRQGAgBCdVcyZHhkZHhkMld1QlBwcFBQcHADwDJXdUJ4+syCgsz6eEJ1VzL+AHBQUHBwUFBwAAABAAAAAAQAA4AAIQAAASIOAgcnESEnPgEzMh4CFRQOAgcXPgM1NC4CIwIANWRcUiOWAYCQNYtQUItpPBIiMB5VKEAtGFCLu2oDgBUnNyOW/oCQNDw8aYtQK1FJQRpgI1ZibDlqu4tQAAEAAAAABAADgAAgAAATFB4CFzcuAzU0PgIzMhYXByERBy4DIyIOAgAYLUAoVR4wIhI8aYtQUIs1kAGAliNSXGQ1aruLUAGAOWxiViNgGkFJUStQi2k8PDSQAYCWIzcnFVCLuwACAAAAQAQBAwAAHgA9AAATMh4CFRQOAiMiLgI1JzQ+AjMVIgYHDgEHPgEhMh4CFRQOAiMiLgI1JzQ+AjMVIgYHDgEHPgHhLlI9IyM9Ui4uUj0jAUZ6o11AdS0JEAcIEgJJLlI9IyM9Ui4uUj0jAUZ6o11AdS0JEAcIEgIAIz1SLi5SPSMjPVIuIF2jekaAMC4IEwoCASM9Ui4uUj0jIz1SLiBdo3pGgDAuCBMKAgEAAAYAQP/ABAADwAADAAcACwARAB0AKQAAJSEVIREhFSERIRUhJxEjNSM1ExUzFSM1NzUjNTMVFREjNTM1IzUzNSM1AYACgP2AAoD9gAKA/YDAQEBAgMCAgMDAgICAgICAAgCAAgCAwP8AwED98jJAkjwyQJLu/sBAQEBAQAAGAAD/wAQAA8AAAwAHAAsAFwAjAC8AAAEhFSERIRUhESEVIQE0NjMyFhUUBiMiJhE0NjMyFhUUBiMiJhE0NjMyFhUUBiMiJgGAAoD9gAKA/YACgP2A/oBLNTVLSzU1S0s1NUtLNTVLSzU1S0s1NUsDgID/AID/AIADQDVLSzU1S0v+tTVLSzU1S0v+tTVLSzU1S0sAAwAAAAAEAAOgAAMADQAUAAA3IRUhJRUhNRMhFSE1ISUJASMRIxEABAD8AAQA/ACAAQABAAEA/WABIAEg4IBAQMBAQAEAgIDAASD+4P8AAQAAAAAAAgBT/8wDrQO0AC8AXAAAASImJy4BNDY/AT4BMzIWFx4BFAYPAQYiJyY0PwE2NCcuASMiBg8BBhQXFhQHDgEjAyImJy4BNDY/ATYyFxYUDwEGFBceATMyNj8BNjQnJjQ3NjIXHgEUBg8BDgEjAbgKEwgjJCQjwCNZMTFZIyMkJCNYDywPDw9YKSkUMxwcMxTAKSkPDwgTCrgxWSMjJCQjWA8sDw8PWCkpFDMcHDMUwCkpDw8PKxAjJCQjwCNZMQFECAckWl5aJMAiJSUiJFpeWiRXEBAPKw9YKXQpFBUVFMApdCkPKxAHCP6IJSIkWl5aJFcQEA8rD1gpdCkUFRUUwCl0KQ8rEA8PJFpeWiTAIiUAAAAABQAA/8AEAAPAABMAJwA7AEcAUwAABTI+AjU0LgIjIg4CFRQeAhMyHgIVFA4CIyIuAjU0PgITMj4CNw4DIyIuAiceAyc0NjMyFhUUBiMiJiU0NjMyFhUUBiMiJgIAaruLUFCLu2pqu4tQUIu7alaYcUFBcZhWVphxQUFxmFYrVVFMIwU3Vm8/P29WNwUjTFFV1SUbGyUlGxslAYAlGxslJRsbJUBQi7tqaruLUFCLu2pqu4tQA6BBcZhWVphxQUFxmFZWmHFB/gkMFSAUQ3RWMTFWdEMUIBUM9yg4OCgoODgoKDg4KCg4OAAAAAADAAD/wAQAA8AAEwAnADMAAAEiDgIVFB4CMzI+AjU0LgIDIi4CNTQ+AjMyHgIVFA4CEwcnBxcHFzcXNyc3AgBqu4tQUIu7amq7i1BQi7tqVphxQUFxmFZWmHFBQXGYSqCgYKCgYKCgYKCgA8BQi7tqaruLUFCLu2pqu4tQ/GBBcZhWVphxQUFxmFZWmHFBAqCgoGCgoGCgoGCgoAADAMAAAANAA4AAEgAbACQAAAE+ATU0LgIjIREhMj4CNTQmATMyFhUUBisBEyMRMzIWFRQGAsQcIChGXTX+wAGANV1GKET+hGUqPDwpZp+fnyw+PgHbIlQvNV1GKPyAKEZdNUZ0AUZLNTVL/oABAEs1NUsAAAIAwAAAA0ADgAAbAB8AAAEzERQOAiMiLgI1ETMRFBYXHgEzMjY3PgE1ASEVIQLAgDJXdUJCdVcygBsYHEkoKEkcGBv+AAKA/YADgP5gPGlOLS1OaTwBoP5gHjgXGBsbGBc4Hv6ggAAAAQCAAAADgAOAAAsAAAEVIwEzFSE1MwEjNQOAgP7AgP5AgAFAgAOAQP0AQEADAEAAAQAAAAAEAAOAAD0AAAEVIx4BFRQGBw4BIyImJy4BNTMUFjMyNjU0JiMhNSEuAScuATU0Njc+ATMyFhceARUjNCYjIgYVFBYzMhYXBADrFRY1MCxxPj5xLDA1gHJOTnJyTv4AASwCBAEwNTUwLHE+PnEsMDWAck5OcnJOO24rAcBAHUEiNWIkISQkISRiNTRMTDQ0TEABAwEkYjU1YiQhJCQhJGI1NExMNDRMIR8AAAAHAAD/wAQAA8AAAwAHAAsADwATABsAIwAAEzMVIzczFSMlMxUjNzMVIyUzFSMDEyETMxMhEwEDIQMjAyEDAICAwMDAAQCAgMDAwAEAgIAQEP0AECAQAoAQ/UAQAwAQIBD9gBABwEBAQEBAQEBAQAJA/kABwP6AAYD8AAGA/oABQP7AAAAKAAAAAAQAA4AAAwAHAAsADwATABcAGwAfACMAJwAAExEhEQE1IRUdASE1ARUhNSMVITURIRUhJSEVIRE1IRUBIRUhITUhFQAEAP2AAQD/AAEA/wBA/wABAP8AAoABAP8AAQD8gAEA/wACgAEAA4D8gAOA/cDAwEDAwAIAwMDAwP8AwMDAAQDAwP7AwMDAAAAFAAAAAAQAA4AAAwAHAAsADwATAAATIRUhFSEVIREhFSERIRUhESEVIQAEAPwAAoD9gAKA/YAEAPwABAD8AAOAgECA/wCAAUCA/wCAAAAAAAUAAAAABAADgAADAAcACwAPABMAABMhFSEXIRUhESEVIQMhFSERIRUhAAQA/ADAAoD9gAKA/YDABAD8AAQA/AADgIBAgP8AgAFAgP8AgAAABQAAAAAEAAOAAAMABwALAA8AEwAAEyEVIQUhFSERIRUhASEVIREhFSEABAD8AAGAAoD9gAKA/YD+gAQA/AAEAPwAA4CAQID/AIABQID/AIAAAAAAAQA/AD8C5gLmACwAACUUDwEGIyIvAQcGIyIvASY1ND8BJyY1ND8BNjMyHwE3NjMyHwEWFRQPARcWFQLmEE4QFxcQqKgQFxYQThAQqKgQEE4QFhcQqKgQFxcQThAQqKgQwxYQThAQqKgQEE4QFhcQqKgQFxcQThAQqKgQEE4QFxcQqKgQFwAAAAYAAAAAAyUDbgAUACgAPABNAFUAggAAAREUBwYrASInJjURNDc2OwEyFxYVMxEUBwYrASInJjURNDc2OwEyFxYXERQHBisBIicmNRE0NzY7ATIXFhMRIREUFxYXFjMhMjc2NzY1ASEnJicjBgcFFRQHBisBERQHBiMhIicmNREjIicmPQE0NzY7ATc2NzY7ATIXFh8BMzIXFhUBJQYFCCQIBQYGBQgkCAUGkgUFCCUIBQUFBQglCAUFkgUFCCUIBQUFBQglCAUFSf4ABAQFBAIB2wIEBAQE/oABABsEBrUGBAH3BgUINxobJv4lJhsbNwgFBQUFCLEoCBcWF7cXFhYJKLAIBQYCEv63CAUFBQUIAUkIBQYGBQj+twgFBQUFCAFJCAUGBgUI/rcIBQUFBQgBSQgFBgYF/lsCHf3jDQsKBQUFBQoLDQJmQwUCAgVVJAgGBf3jMCIjISIvAiAFBggkCAUFYBUPDw8PFWAFBQgAAgAHAEkDtwKvABoALgAACQEGIyIvASY1ND8BJyY1ND8BNjMyFwEWFRQHARUUBwYjISInJj0BNDc2MyEyFxYBTv72BgcIBR0GBuHhBgYdBQgHBgEKBgYCaQUFCP3bCAUFBQUIAiUIBQUBhf72BgYcBggHBuDhBgcHBh0FBf71BQgHBv77JQgFBQUFCCUIBQUFBQAAAAEAIwAAA90DbgCzAAAlIicmIyIHBiMiJyY1NDc2NzY3Njc2PQE0JyYjISIHBh0BFBcWFxYzFhcWFRQHBiMiJyYjIgcGIyInJjU0NzY3Njc2NzY9ARE0NTQ1NCc0JyYnJicmJyYnJiMiJyY1NDc2MzIXFjMyNzYzMhcWFRQHBiMGBwYHBh0BFBcWMyEyNzY9ATQnJicmJyY1NDc2MzIXFjMyNzYzMhcWFRQHBgciBwYHBhURFBcWFxYXMhcWFRQHBiMDwRkzMhoZMjMZDQgHCQoNDBEQChIBBxX+fhYHARUJEhMODgwLBwcOGzU1GhgxMRgNBwcJCQsMEA8JEgECAQIDBAQFCBIRDQ0KCwcHDho1NRoYMDEYDgcHCQoMDRAQCBQBBw8BkA4HARQKFxcPDgcHDhkzMhkZMTEZDgcHCgoNDRARCBQUCRERDg0KCwcHDgACAgICDAsPEQkJAQEDAwUMROAMBQMDBQzUUQ0GAQIBCAgSDwwNAgICAgwMDhEICQECAwMFDUUhAdACDQ0ICA4OCgoLCwcHAwYBAQgIEg8MDQICAgINDA8RCAgBAgEGDFC2DAcBAQcMtlAMBgEBBgcWDwwNAgICAg0MDxEICAEBAgYNT/3mRAwGAgIBCQgRDwwNAAACAAD/twP/A7cAEwA5AAABMhcWFRQHAgcGIyInJjU0NwE2MwEWFxYfARYHBiMiJyYnJicmNRYXFhcWFxYzMjc2NzY3Njc2NzY3A5soHh4avkw3RUg0NDUBbSEp/fgXJicvAQJMTHtHNjYhIRARBBMUEBASEQkXCA8SExUVHR0eHikDtxsaKCQz/plGNDU0SUkwAUsf/bErHx8NKHpNTBobLi86OkQDDw4LCwoKFiUbGhERCgsEBAIAAQAAAAAAANox8glfDzz1AAsEAAAAAADVYbp/AAAAANVhun8AAP+3BAEDwAAAAAgAAgAAAAAAAAABAAADwP/AAAAEAAAA//8EAQABAAAAAAAAAAAAAAAAAAAAHwQAAAAAAAAAAAAAAAIAAAAEAAAABAAAAAQAAAAEAADABAAAAAQAAAAEAAAABAAAQAQAAAAEAAAABAAAUwQAAAAEAAAABAAAwAQAAMAEAACABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAyUAPwMlAAADvgAHBAAAIwP/AAAAAAAAAAoAFAAeAEwAlADaAQoBPgFwAcgCBgJQAnoDBAN6A8gEAgQ2BE4EpgToBTAFWAWABaoF7gamBvAH4gg+AAEAAAAfALQACgAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAOAK4AAQAAAAAAAQAHAAAAAQAAAAAAAgAHAGAAAQAAAAAAAwAHADYAAQAAAAAABAAHAHUAAQAAAAAABQALABUAAQAAAAAABgAHAEsAAQAAAAAACgAaAIoAAwABBAkAAQAOAAcAAwABBAkAAgAOAGcAAwABBAkAAwAOAD0AAwABBAkABAAOAHwAAwABBAkABQAWACAAAwABBAkABgAOAFIAAwABBAkACgA0AKRpY29tb29uAGkAYwBvAG0AbwBvAG5WZXJzaW9uIDEuMABWAGUAcgBzAGkAbwBuACAAMQAuADBpY29tb29uAGkAYwBvAG0AbwBvAG5pY29tb29uAGkAYwBvAG0AbwBvAG5SZWd1bGFyAFIAZQBnAHUAbABhAHJpY29tb29uAGkAYwBvAG0AbwBvAG5Gb250IGdlbmVyYXRlZCBieSBJY29Nb29uLgBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABJAGMAbwBNAG8AbwBuAC4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'icomoon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}.w-e-text img.w-e-selected {  border: 2px solid #1e88e5;}.w-e-text img.w-e-selected:hover {  box-shadow: none;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.0.4@wangeditor/release/wangEditor.js\n// module id = 156\n// module chunks = 8 9","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.4.0@qs/lib/index.js\n// module id = 157\n// module chunks = 8 9","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.4.0@qs/lib/parse.js\n// module id = 158\n// module chunks = 8 9","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.4.0@qs/lib/stringify.js\n// module id = 159\n// module chunks = 8 9","exports = module.exports = require(\"../../node_modules/.0.28.4@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".edit label{display:block;width:100%;margin:10px 0}.edit label.inline{display:inline-block}.edit label.inline input{display:inline-block;width:60px}.edit label input,.edit label textarea{width:100%;margin:10px 0}.edit label input{height:30px}.edit label input[type=file]{width:70px;border:none}.edit label input[name=fileVal]{display:inline-block;width:70%;margin-right:20px}.edit label select{width:100%;margin:10px 0;height:30px;font-size:18px}.edit .isShow{display:inline-block;width:40%}.edit .button{display:inline-block;outline:none;cursor:pointer;text-align:center;text-decoration:none;color:#fff;background:green;padding:10px 20px;text-shadow:0 1px 1px rgba(0,0,0,.3);border-radius:6px;box-shadow:0 1px 2px rgba(0,0,0,.2)}.edit .button:hover{cursor:pointer;background:#51a351}.edit .button:active{position:relative;top:1px}.edit #editor h1{font-size:36px;font-weight:500}.edit #editor h2{font-size:30px;font-weight:500}.edit #editor h3{font-size:24px;font-weight:500}.edit #editor h4{font-size:18px;font-weight:500}.edit #editor h5{font-size:14px;font-weight:500}.edit #editor .w-e-text ol,.edit #editor .w-e-text ol li{list-style:decimal}.edit #editor .w-e-text ul,.edit #editor .w-e-text ul li{list-style:disc}\", \"\", {\"version\":3,\"sources\":[\"/Users/sangdongmei/Desktop/webFront/working/website/backend-view/src/views/edit.vue\"],\"names\":[],\"mappings\":\"AACA,YACE,cAAe,AACf,WAAY,AACZ,aAAe,CAChB,AACD,mBACE,oBAAsB,CACvB,AACD,yBACE,qBAAsB,AACtB,UAAY,CACb,AAKD,uCAHE,WAAY,AACZ,aAAe,CAMhB,AAJD,kBAEE,WAAa,CAEd,AACD,6BACE,WAAY,AACZ,WAAa,CACd,AACD,gCACE,qBAAsB,AACtB,UAAW,AACX,iBAAmB,CACpB,AACD,mBACE,WAAY,AACZ,cAAe,AACf,YAAa,AACb,cAAgB,CACjB,AACD,cACE,qBAAsB,AACtB,SAAW,CACZ,AACD,cACE,qBAAsB,AACtB,aAAc,AACd,eAAgB,AAChB,kBAAmB,AACnB,qBAAsB,AACtB,WAAY,AACZ,iBAAoB,AACpB,kBAAmB,AACnB,qCAAuC,AACvC,kBAAmB,AACnB,mCAAsC,CACvC,AACD,oBACE,eAAgB,AAChB,kBAAoB,CACrB,AACD,qBACE,kBAAmB,AACnB,OAAS,CACV,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AACD,iBACE,eAAgB,AAChB,eAAiB,CAClB,AAID,yDACE,kBAAoB,CACrB,AAID,yDACE,eAAiB,CAClB\",\"file\":\"edit.vue\",\"sourcesContent\":[\"\\n.edit label {\\n  display: block;\\n  width: 100%;\\n  margin: 10px 0;\\n}\\n.edit label.inline {\\n  display: inline-block;\\n}\\n.edit label.inline input {\\n  display: inline-block;\\n  width: 60px;\\n}\\n.edit label textarea {\\n  width: 100%;\\n  margin: 10px 0;\\n}\\n.edit label input {\\n  width: 100%;\\n  height: 30px;\\n  margin: 10px 0;\\n}\\n.edit label input[type='file'] {\\n  width: 70px;\\n  border: none;\\n}\\n.edit label input[name='fileVal'] {\\n  display: inline-block;\\n  width: 70%;\\n  margin-right: 20px;\\n}\\n.edit label select {\\n  width: 100%;\\n  margin: 10px 0;\\n  height: 30px;\\n  font-size: 18px;\\n}\\n.edit .isShow {\\n  display: inline-block;\\n  width: 40%;\\n}\\n.edit .button {\\n  display: inline-block;\\n  outline: none;\\n  cursor: pointer;\\n  text-align: center;\\n  text-decoration: none;\\n  color: #fff;\\n  background: #008000;\\n  padding: 10px 20px;\\n  text-shadow: 0 1px 1px rgba(0,0,0,0.3);\\n  border-radius: 6px;\\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\\n}\\n.edit .button:hover {\\n  cursor: pointer;\\n  background: #51a351;\\n}\\n.edit .button:active {\\n  position: relative;\\n  top: 1px;\\n}\\n.edit #editor h1 {\\n  font-size: 36px;\\n  font-weight: 500;\\n}\\n.edit #editor h2 {\\n  font-size: 30px;\\n  font-weight: 500;\\n}\\n.edit #editor h3 {\\n  font-size: 24px;\\n  font-weight: 500;\\n}\\n.edit #editor h4 {\\n  font-size: 18px;\\n  font-weight: 500;\\n}\\n.edit #editor h5 {\\n  font-size: 14px;\\n  font-weight: 500;\\n}\\n.edit #editor .w-e-text ol {\\n  list-style: decimal;\\n}\\n.edit #editor .w-e-text ol li {\\n  list-style: decimal;\\n}\\n.edit #editor .w-e-text ul {\\n  list-style: disc;\\n}\\n.edit #editor .w-e-text ul li {\\n  list-style: disc;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.28.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4a86a32e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.2.5.1@stylus-loader?{\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./src/views/edit.vue\n// module id = 170\n// module chunks = 9","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return (_vm.values.length > 0) ? _c('div', {\n    staticClass: \"edit\"\n  }, [_c('breadcrumb', {\n    staticClass: \"bread\",\n    attrs: {\n      \"name\": _vm.name\n    }\n  }), _vm._v(\" \"), _c('label', {\n    attrs: {\n      \"for\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"请选择缩略图:\")]), _vm._v(\" \"), _c('input', {\n    ref: \"file\",\n    attrs: {\n      \"type\": \"file\",\n      \"name\": \"file\",\n      \"value\": \"12\"\n    },\n    on: {\n      \"change\": function($event) {\n        _vm.getFile($event)\n      }\n    }\n  }), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.thumb),\n      expression: \"thumb\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"fileVal\"\n    },\n    domProps: {\n      \"value\": (_vm.thumb)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.thumb = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    on: {\n      \"click\": _vm.uploadImg\n    }\n  }, [_vm._v(\"提交\")])]), _vm._v(\" \"), _vm._l((_vm.inputs), function(name, index) {\n    return _c('label', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.inputs.length > 0),\n        expression: \"inputs.length>0\"\n      }],\n      key: index,\n      attrs: {\n        \"for\": \"\"\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(name) + \"\\n        \"), _c('input', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.values[index]),\n        expression: \"values[index]\"\n      }],\n      attrs: {\n        \"type\": \"text\",\n        \"name\": \"head\"\n      },\n      domProps: {\n        \"value\": name,\n        \"value\": (_vm.values[index])\n      },\n      on: {\n        \"input\": function($event) {\n          if ($event.target.composing) { return; }\n          _vm.$set(_vm.values, index, $event.target.value)\n        }\n      }\n    })])\n  }), _vm._v(\" \"), _c('div', {\n    ref: _vm.editor,\n    attrs: {\n      \"id\": \"editor\"\n    }\n  }), _vm._v(\" \"), _vm._l((_vm.selects), function(value, key, index) {\n    return (value) ? _c('label', {\n      key: index,\n      attrs: {\n        \"for\": \"\"\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(key) + \"\\n        \"), _c('select', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.selected[index]),\n        expression: \"selected[index]\"\n      }],\n      attrs: {\n        \"name\": (\"select\" + index)\n      },\n      on: {\n        \"change\": function($event) {\n          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n            return o.selected\n          }).map(function(o) {\n            var val = \"_value\" in o ? o._value : o.value;\n            return val\n          });\n          _vm.$set(_vm.selected, index, $event.target.multiple ? $$selectedVal : $$selectedVal[0])\n        }\n      }\n    }, _vm._l((value), function(option, num) {\n      return _c('option', {\n        key: num,\n        attrs: {\n          \"value\": \"\"\n        },\n        domProps: {\n          \"value\": num\n        }\n      }, [_vm._v(\"\\n                \" + _vm._s(option) + \"\\n            \")])\n    }))]) : _vm._e()\n  }), _vm._v(\" \"), _c('div', [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.isShow),\n      expression: \"isShow\"\n    }],\n    attrs: {\n      \"type\": \"checkbox\",\n      \"name\": \"show\",\n      \"id\": \"show\"\n    },\n    domProps: {\n      \"checked\": Array.isArray(_vm.isShow) ? _vm._i(_vm.isShow, null) > -1 : (_vm.isShow)\n    },\n    on: {\n      \"__c\": function($event) {\n        var $$a = _vm.isShow,\n          $$el = $event.target,\n          $$c = $$el.checked ? (true) : (false);\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$el.checked) {\n            $$i < 0 && (_vm.isShow = $$a.concat($$v))\n          } else {\n            $$i > -1 && (_vm.isShow = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n          }\n        } else {\n          _vm.isShow = $$c\n        }\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"isShow\",\n    attrs: {\n      \"for\": \"show\"\n    }\n  }, [_vm._v(\"是否可见\")])]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    on: {\n      \"click\": _vm.saveBlog\n    }\n  }, [_vm._v(\"保存\")])], 2) : _vm._e()\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.12.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-4a86a32e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/.12.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/views/edit.vue\n// module id = 190\n// module chunks = 9","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/.0.28.4@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4a86a32e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/.2.5.1@stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../node_modules/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./edit.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/.3.0.1@vue-style-loader/lib/addStylesClient.js\")(\"470363b1\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.3.0.1@vue-style-loader!./~/.0.28.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4a86a32e\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.2.5.1@stylus-loader?{\"sourceMap\":true}!./~/.12.2.2@vue-loader/lib/selector.js?type=styles&index=0!./src/views/edit.vue\n// module id = 208\n// module chunks = 9","<template>\n    <div class=\"edit\" v-if=\"values.length > 0\">\n        <breadcrumb :name=\"name\" class=\"bread\"></breadcrumb>\n        <label for=\"\">\n            <p>请选择缩略图:</p>\n            <input type=\"file\" name=\"file\" @change=\"getFile($event)\" ref=\"file\" value=\"12\" />\n            <input type=\"text\" name=\"fileVal\" v-model=\"thumb\">\n            <a @click=\"uploadImg\" class=\"button\">提交</a>\n        </label>\n        <label for=\"\" v-for=\"(name,index) in inputs\" :key=\"index\" v-show=\"inputs.length>0\">\n            {{ name }}\n            <input type=\"text\" name=\"head\" v-model=\"values[index]\" :value=\"name\">\n        </label>\n        <div :ref=\"editor\" id=\"editor\">\n        </div>\n        <label for=\"\" v-for=\"(value, key, index) in selects\" :key=\"index\" v-if=\"value\">\n            {{ key}}\n            <select :name=\"`select${index}`\"  v-model=\"selected[index]\">\n                <option value=\"\" v-for=\"(option, num) in value\" :key=\"num\" :value=\"num\">\n                    {{ option }}\n                </option>\n            </select>\n        </label>\n        <div>\n            <input type=\"checkbox\" name=\"show\" id=\"show\" v-model=\"isShow\">\n            <label for=\"show\" class=\"isShow\">是否可见</label>\n        </div>\n        <a @click=\"saveBlog\" class=\"button\">保存</a>\n    </div>\n</template>\n\n<script>\nimport breadcrumb from 'components/breadcrumb'\nimport Vue from 'vue'\nimport { apiUrl } from 'common/js/dom'\nimport axios from 'axios'\nimport wangEditor from 'wangeditor'\nlet qs = require('qs');\n\nexport default {\n    // values---input value    selected---selected value\n    // thumb 图片路径 editor 编辑器对象 editorContent 编辑内容 singleUrl 请求单文api\n    // inputs 输入框 selects \n    data() {\n        return {\n            name: 'Edit',\n            type: '',\n            inputs: [],\n            selects: {\n                '分类': [],\n                '所属产品': []\n            },\n            values: [],\n            selected: [0, 0],\n            isShow: false,\n            file: '',\n            thumb: '',\n            index: 0,\n            editor: '',\n            editorContent: '',\n            singleUrl: '',\n            id: 0\n        }\n    },\n    watch: {\n        values(val) {\n            console.log(val)\n        },\n        selected(val) {\n            console.log(val)\n        },\n        checked(val) {\n            console.log(val)\n        },\n        editorContent(val) {\n            console.log(val)\n        }\n    },\n    created() {\n        this.addEl()\n        //console.log(this.hasEditor)\n    },\n    mounted() {\n        console.log(this.hasEditor)\n        this.createEditor()\n        // 编辑文件 分类没有请选择这个 所有value－1\n        if (this.singleUrl) {\n            this.$http.get(this.singleUrl, {\n                withCredentials: true\n            }).then((res) => {\n                let info = res.data.data\n                let product = info.productCode ? info.productCode : 0\n                console.log(info)\n                Vue.set(this.values, 0, info.title)\n                Vue.set(this.values, 1, info.auth)\n                Vue.set(this.selected, 0, info.categor - 1)\n                Vue.set(this.selected, 1, product)\n                this.thumb = info.thumb || info.logo\n                this.isShow = info.status === 1 ? true : false\n                this.id = info.id\n                this.editor.txt.html(info.body)\n            })\n        }\n    },\n    components: {\n        breadcrumb\n    },\n    methods: {\n        addEl() {\n            let data = this.$route.query\n\n            if (data.url) {\n                this.singleUrl = data.url\n            }\n            console.log(data)\n            this.type = data.type\n\n            for (let i = 0; i < data.inputs.length; i++) {\n                Vue.set(this.values, i, '')\n                Vue.set(this.inputs, i, data.inputs[i])\n            }\n            for (let key in this.selects) {\n                if (key === '分类') {\n                    this.selects[key] = data.options01\n                } else {\n                    this.selects[key] = data.options02\n                }\n            }\n\n        },\n        getFile(event) {\n            this.file = event.target.files[0];\n        },\n        // 看下optionchange还有用没\n        // optionChange(event) {\n        //     let value = event.target.value\n        //     let name = event.target.name\n        //     console.log(event)\n        //     if (name === 'select0') {\n        //         Vue.set(this.selected, 0, value)\n        //     } else {\n        //         Vue.set(this.selected, 1, value)\n        //     }\n        // },\n        createEditor() {\n            this.editor = new wangEditor('#editor')\n            let _this = this\n            this.editor.customConfig.menus = [\n                'head',  // 标题\n                'bold',  // 粗体\n                'italic',  // 斜体\n                'underline',  // 下划线\n                'strikeThrough',  // 删除线\n                'foreColor',  // 文字颜色\n                'backColor',  // 背景颜色\n                'link',  // 插入链接\n                'list',  // 列表\n                'justify',  // 对齐方式\n                'quote',  // 引用\n                'emoticon',  // 表情\n                'image',  // 插入图片\n                'table',  // 表格\n                'code',  // 插入代码\n                'undo',  // 撤销\n                'redo'\n            ]\n            this.editor.customConfig.customUploadImg = function (files, insert) {\n                // files 是 input 中选中的文件列表\n                // insert 是获取图片 url 后，插入到编辑器的方法\n                let formData = new FormData();\n                formData.append('file', files[0]);\n                let imgUrl;\n                let config = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n                _this.$http.post(`${apiUrl}/admin/file_manager/attachments/uploadImage`, formData, {\n                    withCredentials: true\n                }, config).then(function (res) {\n                    imgUrl = res.data.data[0]\n                    insert(imgUrl)\n                }).catch((err) => {\n                    console.log(err)\n\n                })\n\n            }\n            this.editor.customConfig.onchange = (html) => {\n                _this.editorContent = html\n            }\n            this.editor.create()\n        },\n        saveBlog() {\n            let stateVal = this.isShow ? 1 : 0\n            let _this = this\n\n            let article = {\n                'title': this.values[0],\n                'auth': this.values[1],\n                'type': 'node',\n                'categor': this.selected[0] + 1,\n                'productCode': this.selected[1],\n                'thumb': this.thumb,\n                'logo': this.thumb,\n                'status': stateVal,\n                'body': this.editor.txt.html()\n            }\n\n            let config = {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            if (this.singleUrl && this.id) {\n                let article2 = {\n                    'id': this.id,\n                    'title': this.values[0],\n                    'auth': this.values[1],\n                    'categor': this.selected[0] + 1,\n                    'productCode': this.selected[1],\n                    'thumb': this.thumb,\n                    'logo': this.thumb,\n                    'status': stateVal,\n                    'body': this.editor.txt.html()\n                }\n                this.$http.put(`${apiUrl}/admin/patsnap/${_this.type}`, qs.stringify(article2), {\n                    withCredentials: true\n                }).then(function (res) {\n                    if (res.data.status === 1) {\n                        alert('修改完成')\n                        _this.$router.go(-1)\n                    } else {\n                        alert('修改失败')\n                    }\n                }).catch((err) => {\n                    alert('提交失败，请重试')\n                    console.log(err)\n                })\n            } else {\n                this.$http.post(`${apiUrl}/admin/patsnap/${_this.type}`, qs.stringify(article), {\n                    withCredentials: true\n                }).then(function (res) {\n                    if (res.data.status === 1) {\n                        alert('修改完成')\n                        _this.$router.go(-1)\n                    } else {\n                        alert('修改失败')\n                    }\n\n                }).catch((err) => {\n                    alert('提交失败，请重试')\n                })\n            }\n\n        },\n        uploadImg() {\n            let formData = new FormData();\n            formData.append('file', this.file);\n\n            let _this = this\n\n            let config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n            this.$http.post(`${apiUrl}/admin/file_manager/attachments/uploadImage`, formData, {\n                withCredentials: true\n            }, config).then(function (res) {\n\n                if (res.data.errno == '0') {\n                    alert('图片提交成功')\n                    _this.thumb = res.data.data[0]\n                } else {\n                    alert('图片提交失败')\n                }\n                \n            }).catch((err) => {\n                alert('图片提交失败')\n      \n            })\n        }\n    }\n\n};\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n.edit\n    label\n        display : block\n        width : 100%\n        margin : 10px 0\n        &.inline\n            display : inline-block\n            input\n                display : inline-block\n                width : 60px\n        textarea\n            width: 100%\n            margin : 10px 0\n        input\n            width : 100%\n            height : 30px\n            margin : 10px 0\n            &[type='file']\n                width : 70px\n                border: none\n            &[name='fileVal']\n                display : inline-block\n                width : 70%\n                margin-right : 20px\n        select\n            width : 100%\n            margin : 10px 0\n            height : 30px\n            font-size : 18px\n    .isShow\n        display: inline-block\n        width: 40%\n    .button\n            display: inline-block;\n            outline: none;\n            cursor: pointer;\n            text-align: center;\n            text-decoration: none;\n            color : #fff\n            background : green\n            padding: 10px 20px;\n            text-shadow: 0 1px 1px rgba(0,0,0,.3);\n            border-radius: 6px;\n            box-shadow: 0 1px 2px rgba(0,0,0,.2);\n            &:hover\n                cursor : pointer\n                background : #51a351\n            &:active\n                position: relative\n                top: 1px\n    #editor\n            h1 \n                font-size: 36px\n                font-weight : 500\n            h2 \n                font-size: 30px\n                font-weight : 500\n            h3 \n                font-size: 24px\n                font-weight : 500\n            h4 \n                font-size: 18px\n                font-weight : 500\n            h5 \n                font-size: 14px\n                font-weight : 500\n            .w-e-text        \n                \n                ol\n                    list-style : decimal\n                    li\n                        list-style : decimal\n                ul \n                    list-style : disc\n                    li\n                        list-style : disc\n</style>\n\n\n// WEBPACK FOOTER //\n// edit.vue?73ce595a"],"sourceRoot":""}